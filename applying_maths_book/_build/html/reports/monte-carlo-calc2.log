Traceback (most recent call last):
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/godfreybeddard/Library/Python/3.8/lib/python/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Algorithm 7  least squares and monte carlo calc of decay

def func(x, a, b):
    return a * np.exp(-x/b) 

events= 200000
bins = 500
maxt = 500.0
tau  = 50.0  # ns
fcount= np.zeros(bins,dtype=int)
dtime = np.zeros(bins,dtype=float)
tau_val=np.zeros(events,dtype=float)

for i in range(bins):
    dtime[i]= maxt*(i+1/2)/bins
    pass

for i in range(events):
    p = np.random.ranf()                      # random 0..1
    t = -tau*np.log(p)
   
    indx = int(np.round(bins*t/maxt) )
    tau_val[i]=t
    if indx < bins:
        fcount[indx] = fcount[indx] + 1
    pass

p3, pcov = curve_fit( func, dtime, fcount, p0 = [ 5000, 60.0  ] )


fig1=plt.figure(figsize=(12,5))
ax0 = fig1.add_subplot(1,2,1)
ax1 = fig1.add_subplot(1,2,2)
plt.rcParams.update({'font.size': 16})  # set font size for plots


ax1.semilogy( dtime, fcount ,marker='o',linestyle='',markersize=2,color='blue')
ax1.semilogy( dtime, func(dtime,p3[0],p3[1] ), color='red')	

ax1.set_ylim([1,1.5*max(fcount)])
ax1.set_xlim([0,maxt])
ax1.set_xlabel('time /ns',fontsize = 16)
ax1.set_ylabel('signal (counts)',fontsize = 16)
ax1.set_ylim([1,1.1e4])

ax0.plot(tau_val,color='black',linewidth=1)
ax0.set_xlim([0,500])
ax0.set_ylim([0,400])
ax0.set_xlabel('Event #')
ax0.set_ylabel('lifetime /ns')

plt.tight_layout()

#plt.savefig('monte-carlo-fig11.png')

plt.show()

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/gn/whk4pp2x4kz_ftg0b1ycmh340000gn/T/ipykernel_5508/1432422823.py[0m in [0;36m<module>[0;34m[0m
[1;32m     26[0m     [0;32mpass[0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m [0;34m[0m[0m
[0;32m---> 28[0;31m [0mp3[0m[0;34m,[0m [0mpcov[0m [0;34m=[0m [0mcurve_fit[0m[0;34m([0m [0mfunc[0m[0;34m,[0m [0mdtime[0m[0;34m,[0m [0mfcount[0m[0;34m,[0m [0mp0[0m [0;34m=[0m [0;34m[[0m [0;36m5000[0m[0;34m,[0m [0;36m60.0[0m  [0;34m][0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     29[0m [0;34m[0m[0m
[1;32m     30[0m [0;34m[0m[0m

[0;31mNameError[0m: name 'curve_fit' is not defined
NameError: name 'curve_fit' is not defined

